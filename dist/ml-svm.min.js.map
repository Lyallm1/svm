{"version":3,"sources":["ml-svm.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","mlSvm","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"svm","kernel","./kernel","./svm",2,"x1","x2","func","par","p","dot","Math","pow","rest","Array","norm","exp","TypeError","p1","p2","prod",3,"x","X","Y","alpha","b","k","m","aux","SVM","options","this","defaultOptions","hasOwnProperty","C","tol","max_passes","prototype","train","b1","b2","iter","Ei","Ej","ai","aj","L","H","eta","numChange","j","ceil","random","max","min","abs","W","w","alphas","splice","load","model","name","slice","getAlphas","getThreshold","predict","ev","isArray","ans"],"mappings":"CAMC,SAASA,GAAG,GAAG,gBAAiBC,UAAS,mBAAoBC,QAAOA,OAAOD,QAAQD,QAAS,IAAG,kBAAmBG,SAAQA,OAAOC,IAAID,UAAUH,OAAO,CAAC,GAAIK,EAAE,oBAAoBC,QAAOD,EAAEC,OAAO,mBAAoBC,QAAOF,EAAEE,OAAO,mBAAoBC,QAAOH,EAAEG,MAAMH,EAAEI,MAAMT,MAAM,WAAqC,MAAO,SAAUA,GAAEU,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIT,GAAE,GAAIc,OAAM,uBAAuBL,EAAE,IAAK,MAAMT,GAAEe,KAAK,mBAAmBf,EAAE,GAAIgB,GAAEV,EAAEG,IAAIb,WAAYS,GAAEI,GAAG,GAAGQ,KAAKD,EAAEpB,QAAQ,SAASD,GAAG,GAAIW,GAAED,EAAEI,GAAG,GAAGd,EAAG,OAAOa,GAAEF,EAAEA,EAAEX,IAAIqB,EAAEA,EAAEpB,QAAQD,EAAEU,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGb,QAAkD,IAAI,GAA1CiB,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKW,GAAG,SAASP,EAAQf,EAAOD,GAC1xBA,EAAQwB,IAAMR,EAAQ,SACtBhB,EAAQyB,OAAST,EAAQ,cACtBU,WAAW,EAAEC,QAAQ,IAAIC,GAAG,SAASZ,EAAQf,EAAOD,GACvD,YAUA,SAASyB,GAAOI,EAAGC,EAAGC,EAAKC,GACvBD,EAAwB,mBAATA,GAAwB,SAAWA,EAClDC,EAAsB,mBAARA,GAAuB,EAAIA,CAEzC,IAAIC,GAAIC,EAAIL,EAAGC,EACf,IAAa,WAATC,EACA,MAAOE,EAEN,IAAY,eAATF,EACJ,MAAOI,MAAKC,IAAKH,EAAI,EAAID,EAExB,IAAY,WAATD,EAAmB,CAGvB,IAAK,GAFDX,GAAIS,EAAGP,OACPe,EAAO,GAAIC,OAAMlB,GACZH,EAAI,EAAOG,EAAJH,EAAOA,IACnBoB,EAAKpB,GAAKY,EAAGZ,GAAKa,EAAGb,EAEzB,IAAIsB,GAAOL,EAAIG,EAAMA,EACrB,OAAOF,MAAKK,IAAI,GAAQ,GAAGR,EAAIA,IAG/B,KAAM,IAAIS,WAAU,6BAU5B,QAASP,GAAIQ,EAAIC,GACb,GAAID,EAAGpB,SAAWqB,EAAGrB,OACjB,KAAM,IAAImB,WAAU,qCAKxB,KAAK,GAHDrB,GAAIsB,EAAGpB,OACPsB,EAAO,EAEF3B,EAAI,EAAOG,EAAJH,EAAOA,IACnB2B,GAAQF,EAAGzB,GAAK0B,EAAG1B,EAGvB,OAAO2B,GAGX3C,EAAOD,QAAUyB,OACXoB,GAAG,SAAS7B,EAAQf,EAAOD,GACjC,YAkCA,SAASI,GAAE0C,EAAGC,EAAGC,EAAGC,EAAOC,EAAGC,EAAGnB,GAG7B,IAAK,GAFDoB,GAAIL,EAAEzB,OACN+B,EAAMH,EACDjC,EAAI,EAAOmC,EAAJnC,EAAOA,IACnBiC,GAAKD,EAAMhC,GAAG+B,EAAE/B,GAAGQ,EAAOsB,EAAE9B,GAAG6B,EAAGK,EAAGnB,EAEzC,OAAOqB,GASX,QAASC,GAAIC,GACTA,EAAUA,MACVC,KAAKD,UACL,KAAK,GAAI1C,KAAK4C,GAEND,KAAKD,QAAQ1C,GADb0C,EAAQG,eAAe7C,GACL0C,EAAQ1C,GAER4C,EAAe5C,EAGzC2C,MAAKN,EAAI,EA1Db,GAAIzB,GAAST,EAAQ,YAajByC,GACAE,EAAG,GACHC,IAAK,GACLC,WAAY,IACZ7B,IAAK,EACLmB,EAAG,SAgDPG,GAAIQ,UAAUC,MAAQ,SAAUhB,EAAGC,GAG/B,IAAK,GAFDI,GAAIJ,EAAE1B,OACN2B,EAAQ,GAAIX,OAAMc,GACbrC,EAAI,EAAOqC,EAAJrC,EAAOA,IACnBkC,EAAMlC,GAAK,CACf,IAAIgC,EAAEzB,SAAW8B,EACb,KAAM,IAAIX,WAAU,qCAaxB,KAZA,GAAIS,GAAI,EACJc,EAAK,EACLC,EAAK,EACLC,EAAO,EACPC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAI,EACJC,EAAI,EACJC,EAAM,EAEHP,EAAOV,KAAKD,QAAQM,YAAY,CAEnC,IAAK,GADDa,GAAY,EACPzD,EAAI,EAAOmC,EAAJnC,EAAOA,IAEnB,GADAkD,EAAK/D,EAAE2C,EAAE9B,GAAG8B,EAAEC,EAAEC,EAAMC,EAAEM,KAAKD,QAAQJ,EAAEK,KAAKD,QAAQvB,KAAOgB,EAAE/B,GACvD+B,EAAE/B,GAAGkD,GAAMX,KAAKD,QAAQK,KAASX,EAAMhC,GAAKuC,KAAKD,QAAQI,GAASX,EAAE/B,GAAGkD,EAAKX,KAAKD,QAAQK,KAASX,EAAMhC,GAAK,EAAK,CACpH,GAAI0D,GAAI,CACR,GACIA,GAAIxC,KAAKyC,KAAKzC,KAAK0C,UAAUzB,EAAI,UAE9BuB,IAAM1D,EACbmD,GAAKhE,EAAE2C,EAAE4B,GAAG5B,EAAEC,EAAEC,EAAMC,EAAEM,KAAKD,QAAQJ,EAAEK,KAAKD,QAAQvB,KAAOgB,EAAE2B,GAC7DN,EAAKpB,EAAMhC,GACXqD,EAAKrB,EAAM0B,GACP3B,EAAE/B,KAAO+B,EAAE2B,IACXJ,EAAIpC,KAAK2C,IAAI,EAAGT,EAAGC,EAAGd,KAAKD,QAAQI,GACnCa,EAAIrC,KAAK4C,IAAIvB,KAAKD,QAAQI,EAAGU,EAAGC,KAGhCC,EAAIpC,KAAK2C,IAAI,EAAGT,EAAGC,GACnBE,EAAIrC,KAAK4C,IAAIvB,KAAKD,QAAQI,EAAGH,KAAKD,QAAQI,EAAEU,EAAGC,IAE/CC,IAAMC,IACNC,EAAM,EAAEhD,EAAOsB,EAAE9B,GAAG8B,EAAE4B,GAAInB,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KAAOP,EAAOsB,EAAE9B,GAAG8B,EAAE9B,GAAIuC,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KAAOP,EAAOsB,EAAE4B,GAAG5B,EAAE4B,GAAInB,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KACzJ,EAANyC,IACAxB,EAAM0B,GAAK1B,EAAM0B,GAAM3B,EAAE2B,IAAIR,EAAKC,GAAOK,EACrCxB,EAAM0B,GAAKH,EACXvB,EAAM0B,GAAKH,EACNvB,EAAM0B,GAAKJ,IAChBtB,EAAM0B,GAAKJ,GACXpC,KAAK6C,IAAIV,EAAKrB,EAAM0B,KAAO,OAC3B1B,EAAMhC,GAAKgC,EAAMhC,GAAK+B,EAAE/B,GAAG+B,EAAE2B,IAAIL,EAAKrB,EAAM0B,IAC5CX,EAAKd,EAAIiB,EAAKnB,EAAE/B,IAAIgC,EAAMhC,GAAKoD,GAAI5C,EAAOsB,EAAE9B,GAAG8B,EAAE9B,GAAIuC,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KAAOgB,EAAE2B,IAAI1B,EAAM0B,GAAKL,GAAI7C,EAAOsB,EAAE9B,GAAG8B,EAAE4B,GAAInB,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KAC7JiC,EAAKf,EAAIkB,EAAKpB,EAAE/B,IAAIgC,EAAMhC,GAAKoD,GAAI5C,EAAOsB,EAAE9B,GAAG8B,EAAE4B,GAAInB,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KAAOgB,EAAE2B,IAAI1B,EAAM0B,GAAKL,GAAI7C,EAAOsB,EAAE4B,GAAG5B,EAAE4B,GAAInB,KAAKD,QAAQJ,EAAGK,KAAKD,QAAQvB,KAEzJkB,EADCD,EAAMhC,GAAKuC,KAAKD,QAAQI,GAAOV,EAAMhC,GAAK,EACvC+C,EACEf,EAAM0B,GAAKnB,KAAKD,QAAQI,GAAOV,EAAM0B,GAAK,EAC5CV,GAECD,EAAKC,GAAM,EACpBS,GAAa,KAMhB,GAAbA,EACAR,GAAQ,EAERA,EAAO,EAEfV,KAAKN,EAAIA,CACT,IAAItC,GAAImC,EAAE,GAAGzB,MACbkC,MAAKyB,EAAI,GAAI3C,OAAM1B,EACnB,KAAK,GAAID,GAAI,EAAOC,EAAJD,EAAOA,IAAK,CACxB6C,KAAKyB,EAAEtE,GAAK,CACZ,KAAK,GAAIuE,GAAI,EAAO9B,EAAJ8B,EAAOA,IACnB1B,KAAKyB,EAAEtE,IAAMqC,EAAEkC,GAAGjC,EAAMiC,GAAGnC,EAAEmC,GAAGvE,GAExC6C,KAAK2B,OAASlC,EAAMmC,UAQxB9B,EAAI+B,KAAO,SAAUC,GACjB,GAAmB,QAAfA,EAAMC,KAAgB,CACtB,GAAI/D,GAAM,GAAI8B,GAAIgC,EAAM/B,QAGxB,OAFA/B,GAAIyD,EAAIK,EAAML,EAAEO,QAChBhE,EAAI0B,EAAIoC,EAAMpC,EACP1B,EAEP,KAAM,IAAIiB,WAAU,0BAU5Ba,EAAIQ,UAAJR,UAAuB,WACnB,GAAIgC,IACAC,KAAM,MAKV,OAHAD,GAAM/B,QAAUC,KAAKD,QACrB+B,EAAML,EAAIzB,KAAKyB,EACfK,EAAMpC,EAAIM,KAAKN,EACRoC,GAOXhC,EAAIQ,UAAU2B,UAAY,WACtB,MAAOjC,MAAK2B,OAAOK,SAOvBlC,EAAIQ,UAAU4B,aAAe,WACzB,MAAOlC,MAAKN,GAQhBI,EAAIQ,UAAU6B,QAAU,SAAU1D,GAC9B,GAAI2D,EACJ,IAAItD,MAAMuD,QAAQ5D,KAAOK,MAAMuD,QAAQ5D,EAAE,KAAwB,gBAATA,GAAE,IAAmB,CAEzE,IAAK,GADD6D,GAAM,GAAIxD,OAAML,EAAEX,QACbL,EAAI,EAAGA,EAAI6E,EAAIxE,OAAQL,IAAK,CACjC2E,EAAKpC,KAAKN,CACV,KAAK,GAAIyB,GAAI,EAAGA,EAAInB,KAAKyB,EAAE3D,OAAQqD,IAC/BiB,GAAMpC,KAAKyB,EAAEN,GAAG1C,EAAE0C,EAElBmB,GAAI7E,GADC,EAAL2E,EACS,GAEA,EAEjB,MAAOE,GAGPF,EAAKpC,KAAKN,CACV,KAAK,GAAInD,GAAI,EAAGA,EAAIyD,KAAKyB,EAAE3D,OAAQvB,IAC/B6F,GAAMpC,KAAKyB,EAAElF,GAAGkC,EAAElC,EACtB,OAAS,GAAL6F,EACO,GAEA,GAInB3F,EAAOD,QAAUsD,IACd5B,WAAW,SAAS,IAAI","file":"ml-svm.min.js","sourcesContent":["/**\n * ml-svm - Support Vector Machine in Javascript\n * @version v1.0.1\n * @link https://github.com/mljs/svm\n * @license MIT\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.mlSvm=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nexports.svm = require('./svm');\nexports.kernel = require('./kernel');\n},{\"./kernel\":2,\"./svm\":3}],2:[function(require,module,exports){\n'use strict';\n\n/**\n * Kernel function to return the dot product for different spaces\n * @param {Array <number>} x1 - input first vector\n * @param {Array <number>} x2 - input second vector\n * @param {string} func - the kind of transformation\n * @param {number} par - parameter used in the polynomial and the radial function\n * @return {number} calculus of the dot product using the function\n * */\nfunction kernel(x1,x2,func,par) {\n    func = (typeof func === 'undefined') ? 'lineal' : func;\n    par = (typeof par === 'undefined') ? 2 : par;\n\n    var p = dot(x1,x2);\n    if (func === 'lineal'){\n        return p;\n    }\n    else if(func === 'polynomial') {\n        return Math.pow((p + 1), par);\n    }\n    else if(func === 'radial') {\n        var l = x1.length;\n        var rest = new Array(l);\n        for (var i = 0; i < l; i++) {\n            rest[i] = x1[i] - x2[i];\n        }\n        var norm = dot(rest, rest);\n        return Math.exp((norm)/(-2*par*par));\n    }\n    else {\n        throw new TypeError('Function kernel undefined');\n    }\n}\n\n/**\n * The dot product between the p1 and p2 vectors\n * @param {Array <number>} p1 - first vector to get dot product\n * @param {Array <number>} p2 - second vector to get dot product\n * @returns {number} dot product between the p1 and p2 vectors\n */\nfunction dot(p1, p2) {\n    if (p1.length !== p2.length) {\n        throw new TypeError('Arrays should have the same length');\n    }\n    var l = p1.length;\n    var prod = 0;\n\n    for (var i = 0; i < l; i++) {\n        prod += p1[i] * p2[i];\n    }\n\n    return prod;\n}\n\nmodule.exports = kernel;\n},{}],3:[function(require,module,exports){\n'use strict';\nvar kernel = require(\"./kernel\");\n\n/**\n * Parameters to implement function\n * @type {{C: number, tol: number, max_passes: number, par: number, k: string}}\n * @param {number} C - regularization parameter\n * @param {number} tol - numerical tolerance\n * @param {number} max_passes - max number of times to iterate over alphas without\n * changing\n * @param {string} k - the kind of kernel\n * @param {number} par - parameter used in the polynomial and the radial function\n * of the kernel\n */\nvar defaultOptions = {\n    C: 10,\n    tol: 10e-2,\n    max_passes: 100,\n    par: 2,\n    k: 'lineal'\n};\n\n/**\n * Function to calculate the estimated prediction\n * @param {Array <number>} x - point where calculate the function prediction\n * @param {Array <Array <number>>} X - training data point in the form (x1, x2)\n * @param {Array <number>} Y - training data labels in the domain {1,-1}\n * @param {Array <number>} alpha - Lagrange multipliers\n * @param {number} b - threshold of the function\n * @param {string} k - the kind of kernel\n * @param {number} par - parameter used in the polynomial and the radial function\n * of the kernel\n * @returns {number}\n */\nfunction f(x, X, Y, alpha, b, k, par) {\n    var m = X.length;\n    var aux = b;\n    for (var i = 0; i < m; i++) {\n        b += alpha[i]*Y[i]*kernel(X[i],x, k, par)\n    }\n    return aux;\n}\n\n/**\n * Simplified version of the Sequential Minimal Optimization algorithm for training\n * support vector machines\n * @param {{json}} options - parameters to implement function\n * @constructor\n */\nfunction SVM(options) {\n    options = options || {};\n    this.options = {};\n    for (var o in defaultOptions) {\n        if (options.hasOwnProperty(o)) {\n            this.options[o] = options[o];\n        } else {\n            this.options[o] = defaultOptions[o];\n        }\n    }\n    this.b = 0;\n}\n\n/**\n * Train the SVM model\n * @param {Array <Array <number>>} X - training data point in the form (x1, x2)\n * @param {Array <number>} Y - training data labels in the domain {1,-1}\n */\nSVM.prototype.train = function (X, Y) {\n    var m = Y.length;\n    var alpha = new Array(m);\n    for (var a = 0; a < m; a++)\n        alpha[a] = 0;\n    if (X.length !== m)\n        throw new TypeError('Arrays should have the same length');\n    var b = 0,\n        b1 = 0,\n        b2 = 0,\n        iter = 0,\n        Ei = 0,\n        Ej = 0,\n        ai = 0,\n        aj = 0,\n        L = 0,\n        H = 0,\n        eta = 0;\n\n    while (iter < this.options.max_passes) {\n        var numChange = 0;\n        for (var i = 0; i < m; i++) {\n            Ei = f(X[i],X,Y,alpha,b,this.options.k,this.options.par) - Y[i];\n            if (((Y[i]*Ei < -this.options.tol) && (alpha[i] < this.options.C)) || ((Y[i]*Ei > this.options.tol) && (alpha[i] > 0))) {\n                var j = 0;\n                do {\n                    j = Math.ceil(Math.random()*(m - 1));\n                }\n                while (j === i);\n                Ej = f(X[j],X,Y,alpha,b,this.options.k,this.options.par) - Y[j];\n                ai = alpha[i];\n                aj = alpha[j];\n                if (Y[i] === Y[j]) {\n                    L = Math.max(0, ai+aj-this.options.C);\n                    H = Math.min(this.options.C, ai+aj);\n                }\n                else  {\n                    L = Math.max(0, ai-aj);\n                    H = Math.min(this.options.C, this.options.C-ai+aj);\n                }\n                if (L !== H) {\n                    eta = 2*kernel(X[i],X[j], this.options.k, this.options.par) - kernel(X[i],X[i], this.options.k, this.options.par) - kernel(X[j],X[j], this.options.k, this.options.par);\n                    if (eta < 0) {\n                        alpha[j] = alpha[j] - (Y[j]*(Ei - Ej)) / eta;\n                        if (alpha[j] > H)\n                            alpha[j] = H;\n                        else if (alpha[j] < L)\n                            alpha[j] = L;\n                        if (Math.abs(aj - alpha[j]) >= 10e-5) {\n                            alpha[i] = alpha[i] + Y[i]*Y[j]*(aj - alpha[j]);\n                            b1 = b - Ei - Y[i]*(alpha[i] - ai)*kernel(X[i],X[i], this.options.k, this.options.par) - Y[j]*(alpha[j] - aj)*kernel(X[i],X[j], this.options.k, this.options.par);\n                            b2 = b - Ej - Y[i]*(alpha[i] - ai)*kernel(X[i],X[j], this.options.k, this.options.par) - Y[j]*(alpha[j] - aj)*kernel(X[j],X[j], this.options.k, this.options.par);\n                            if ((alpha[i] < this.options.C) && (alpha[i] > 0))\n                                b = b1;\n                            else if ((alpha[j] < this.options.C) && (alpha[j] > 0))\n                                b = b2;\n                            else\n                                b = (b1 + b2) / 2;\n                            numChange += 1;\n                        }\n                    }\n                }\n            }\n        }\n        if (numChange == 0)\n            iter += 1;\n        else\n            iter = 0;\n    }\n    this.b = b;\n    var s = X[0].length;\n    this.W = new Array(s);\n    for (var r = 0; r < s; r++) {\n        this.W[r] = 0;\n        for (var w = 0; w < m; w++)\n            this.W[r] += Y[w]*alpha[w]*X[w][r];\n    }\n    this.alphas = alpha.splice();\n};\n\n/**\n * Recreates a SVM based in the exported model\n * @param {{name: string, ,options: {json} ,alpha: Array<number>, b: number}} model\n * @returns {SVM}\n */\nSVM.load = function (model) {\n    if (model.name === 'SVM') {\n        var svm = new SVM(model.options);\n        svm.W = model.W.slice();\n        svm.b = model.b;\n        return svm;\n    } else {\n        throw new TypeError('expecting a SVM model');\n    }\n};\n\n/**\n * Let's have a JSON to recreate the model\n * @returns {{name: String(\"SVM\"), ,options: {json} ,alpha: Array<number>, b: number}}\n * name identifier, options to recreate model, the Lagrange multipliers and the\n * threshold of the objective function\n */\nSVM.prototype.export = function () {\n    var model = {\n        name: 'SVM'\n    };\n    model.options = this.options;\n    model.W = this.W;\n    model.b = this.b;\n    return model;\n};\n\n/**\n * Return the Lagrange multipliers\n * @returns {Array <number>}\n */\nSVM.prototype.getAlphas = function () {\n    return this.alphas.slice();\n};\n\n/**\n * Returns the threshold of the model function\n * @returns {number} threshold of the function\n */\nSVM.prototype.getThreshold = function () {\n    return this.b;\n};\n\n/**\n * Use the train model to make predictions\n * @param {Array} p - An array or a single dot to have the prediction\n * @returns {*} An array or a single {-1, 1} value of the prediction\n */\nSVM.prototype.predict = function (p) {\n    var ev;\n    if (Array.isArray(p) && (Array.isArray(p[0]) || (typeof p[0] === 'object'))) {\n        var ans = new Array(p.length);\n        for (var i = 0; i < ans.length; i++) {\n            ev = this.b;\n            for (var j = 0; j < this.W.length; j++)\n                ev += this.W[j]*p[j];\n            if (ev < 0)\n                ans[i] = -1;\n            else\n                ans[i] = 1;\n        }\n        return ans;\n    }\n    else {\n        ev = this.b;\n        for (var e = 0; e < this.W.length; e++)\n            ev += this.W[e]*p[e];\n        if (ev < 0)\n            return -1;\n        else\n            return 1;\n    }\n};\n\nmodule.exports = SVM;\n},{\"./kernel\":2}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}