// ml-svm@v1.0.1, MIT licensed. https://github.com/mljs/svm
!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o;"undefined"!=typeof window?o=window:"undefined"!=typeof global?o=global:"undefined"!=typeof self&&(o=self),o.mlSvm=t()}}(function(){return function t(o,n,r){function e(s,a){if(!n[s]){if(!o[s]){var h="function"==typeof require&&require;if(!a&&h)return h(s,!0);if(i)return i(s,!0);var p=new Error("Cannot find module '"+s+"'");throw p.code="MODULE_NOT_FOUND",p}var f=n[s]={exports:{}};o[s][0].call(f.exports,function(t){var n=o[s][1][t];return e(n?n:t)},f,f.exports,t,o,n,r)}return n[s].exports}for(var i="function"==typeof require&&require,s=0;s<r.length;s++)e(r[s]);return e}({1:[function(t,o,n){n.svm=t("./svm"),n.kernel=t("./kernel")},{"./kernel":2,"./svm":3}],2:[function(t,o,n){"use strict";function r(t,o,n,r){n="undefined"==typeof n?"lineal":n,r="undefined"==typeof r?2:r;var i=e(t,o);if("lineal"===n)return i;if("polynomial"===n)return Math.pow(i+1,r);if("radial"===n){for(var s=t.length,a=new Array(s),h=0;s>h;h++)a[h]=t[h]-o[h];var p=e(a,a);return Math.exp(p/(-2*r*r))}throw new TypeError("Function kernel undefined")}function e(t,o){if(t.length!==o.length)throw new TypeError("Arrays should have the same length");for(var n=t.length,r=0,e=0;n>e;e++)r+=t[e]*o[e];return r}o.exports=r},{}],3:[function(t,o,n){"use strict";function r(t,o,n,r,e,s,a){for(var h=o.length,p=e,f=0;h>f;f++)e+=r[f]*n[f]*i(o[f],t,s,a);return p}function e(t){t=t||{},this.options={};for(var o in s)this.options[o]=t.hasOwnProperty(o)?t[o]:s[o];this.b=0}var i=t("./kernel"),s={C:10,tol:.1,max_passes:100,par:2,k:"lineal"};e.prototype.train=function(t,o){for(var n=o.length,e=new Array(n),s=0;n>s;s++)e[s]=0;if(t.length!==n)throw new TypeError("Arrays should have the same length");for(var a=0,h=0,p=0,f=0,l=0,u=0,c=0,d=0,v=0,y=0,m=0;f<this.options.max_passes;){for(var w=0,g=0;n>g;g++)if(l=r(t[g],t,o,e,a,this.options.k,this.options.par)-o[g],o[g]*l<-this.options.tol&&e[g]<this.options.C||o[g]*l>this.options.tol&&e[g]>0){var k=0;do k=Math.ceil(Math.random()*(n-1));while(k===g);u=r(t[k],t,o,e,a,this.options.k,this.options.par)-o[k],c=e[g],d=e[k],o[g]===o[k]?(v=Math.max(0,c+d-this.options.C),y=Math.min(this.options.C,c+d)):(v=Math.max(0,c-d),y=Math.min(this.options.C,this.options.C-c+d)),v!==y&&(m=2*i(t[g],t[k],this.options.k,this.options.par)-i(t[g],t[g],this.options.k,this.options.par)-i(t[k],t[k],this.options.k,this.options.par),0>m&&(e[k]=e[k]-o[k]*(l-u)/m,e[k]>y?e[k]=y:e[k]<v&&(e[k]=v),Math.abs(d-e[k])>=1e-4&&(e[g]=e[g]+o[g]*o[k]*(d-e[k]),h=a-l-o[g]*(e[g]-c)*i(t[g],t[g],this.options.k,this.options.par)-o[k]*(e[k]-d)*i(t[g],t[k],this.options.k,this.options.par),p=a-u-o[g]*(e[g]-c)*i(t[g],t[k],this.options.k,this.options.par)-o[k]*(e[k]-d)*i(t[k],t[k],this.options.k,this.options.par),a=e[g]<this.options.C&&e[g]>0?h:e[k]<this.options.C&&e[k]>0?p:(h+p)/2,w+=1)))}0==w?f+=1:f=0}this.b=a;var x=t[0].length;this.W=new Array(x);for(var b=0;x>b;b++){this.W[b]=0;for(var M=0;n>M;M++)this.W[b]+=o[M]*e[M]*t[M][b]}this.alphas=e.splice()},e.load=function(t){if("SVM"===t.name){var o=new e(t.options);return o.W=t.W.slice(),o.b=t.b,o}throw new TypeError("expecting a SVM model")},e.prototype["export"]=function(){var t={name:"SVM"};return t.options=this.options,t.W=this.W,t.b=this.b,t},e.prototype.getAlphas=function(){return this.alphas.slice()},e.prototype.getThreshold=function(){return this.b},e.prototype.predict=function(t){var o;if(Array.isArray(t)&&(Array.isArray(t[0])||"object"==typeof t[0])){for(var n=new Array(t.length),r=0;r<n.length;r++){o=this.b;for(var e=0;e<this.W.length;e++)o+=this.W[e]*t[e];n[r]=0>o?-1:1}return n}o=this.b;for(var i=0;i<this.W.length;i++)o+=this.W[i]*t[i];return 0>o?-1:1},o.exports=e},{"./kernel":2}]},{},[1])(1)});
//# sourceMappingURL=ml-svm.min.js.map